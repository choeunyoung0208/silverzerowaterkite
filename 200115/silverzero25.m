%0~255의 값을 가지도록 mapping

%(제 생각으로는) 평활화된 영상의 픽셀값을 받을 행렬을 만들면 double형 클래스를 가지는 행렬이 만들어지는데,
%double형이면 0~255의 값을 가질 수 없기 때문에 우선 클래스를 uint8로 바꿔준 뒤에 평활화를 하면 될 것 같다고
%생각하였습니다. 
%0~1의 값을 가지도록 mapping을 할때는 평활화 식을 (원본픽셀 - 최솟값)/(최댓값 - 최솟값)으로 사용하면 되지만,
%0~255의 값을 가지도록 mapping을 할때는 위의 식에 255를 곱하면 될 것 같다고 생각하여 255를 곱해서 만들어보았는데
%이진화(0 아니면 255의 값을 가지게 돼요!)가 되었습니다ㅠ.ㅠ 고민해보겠습니다!

f=imread('lena.jpg'); %영상을 읽어 f에 할당
minimum=min(min(f)); %f의 최솟값. f의 차원이 2차원이므로 min()명령어를 두번 사용함. 최솟값이 5임을 확인할 수 있음
maximum=max(max(f)); %f의 최댓값. f의 차원이 2차원이므로 min()명령어를 두번 사용함. 최댓값이 255임을 확인할 수 있음
[m, n]=size(f); %f의 행과 열을 변수 m, n에 할당
g=zeros(m, n); %m, n을 이용하여 f와 같은 크기를 가지는 행렬 생성. double형으로 생성됨.
g=im2uint8(g); %double형을 uint8로 변환
g=((f-minimum)/(maximum-minimum))*255; %원본 영상의 픽셀값들, 최솟값, 최댓값을 이용해 원본 영상을 평활화
imshow(g), figure, imshow(f), figure, imhist(g), figure, imhist(f); %원본 영상과 평활화된 영상을 출력하고, 히스토그램도 같이 출력
